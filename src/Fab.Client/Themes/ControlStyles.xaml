<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Controls="clr-namespace:Fab.Client.Shell.Controls"
	xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
	xmlns:Icons="clr-namespace:Fab.Client.Resources.Icons" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sys="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary
			Source="Cosmopolitan/CoreStyles.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem"
		   BasedOn="{StaticResource DefaultListBoxItemStyle}">
		<Setter Property="Padding" Value="3" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="TabNavigation" Value="Local" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To=".35"
											Storyboard.TargetProperty="Opacity"
											Storyboard.TargetName="fillColor" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To=".55"
											Storyboard.TargetProperty="Opacity"
											Storyboard.TargetName="contentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup
								x:Name="SelectionStates">
								<VisualState
									x:Name="Unselected" />
								<VisualState
									x:Name="Selected">
									<Storyboard>
										<DoubleAnimation
											Duration="0"
											To=".75"
											Storyboard.TargetProperty="Opacity"
											Storyboard.TargetName="fillColor2" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup
								x:Name="FocusStates">
								<VisualState
									x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Duration="0"
											Storyboard.TargetProperty="Visibility"
											Storyboard.TargetName="FocusVisualElement">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle
							x:Name="fillColor"
							Fill="#FFBADDE9"
							IsHitTestVisible="False"
							Opacity="0"
							RadiusY="1"
							RadiusX="1" />
						<Rectangle
							x:Name="fillColor2"
							Fill="#FFBADDE9"
							IsHitTestVisible="False"
							Opacity="0"
							RadiusY="1"
							RadiusX="1" />
						<ContentPresenter
							x:Name="contentPresenter"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Content="{TemplateBinding Content}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}" />
						<Rectangle
							x:Name="FocusVisualElement"
							RadiusY="1"
							RadiusX="1"
							Stroke="#FF6DBDD1"
							StrokeThickness="1"
							Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="ComboBoxItemStyle"
		TargetType="ComboBoxItem"
		BasedOn="{StaticResource DefaultComboBoxItemStyle}">
		<Setter
			Property="Padding"
			Value="3" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Left" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Top" />
		<Setter
			Property="Background"
			Value="Transparent" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="TabNavigation"
			Value="Local" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="ComboBoxItem">
					<Grid
						Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="CommonStates">
								<VisualState
									x:Name="Normal" />
								<VisualState
									x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation
											Duration="0"
											To=".35"
											Storyboard.TargetProperty="Opacity"
											Storyboard.TargetName="fillColor" />
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation
											Duration="0"
											To=".55"
											Storyboard.TargetProperty="Opacity"
											Storyboard.TargetName="contentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup
								x:Name="SelectionStates">
								<VisualState
									x:Name="Unselected" />
								<VisualState
									x:Name="Selected">
									<Storyboard>
										<DoubleAnimation
											Duration="0"
											To=".75"
											Storyboard.TargetProperty="Opacity"
											Storyboard.TargetName="fillColor2" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup
								x:Name="FocusStates">
								<VisualState
									x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Duration="0"
											Storyboard.TargetProperty="Visibility"
											Storyboard.TargetName="FocusVisualElement">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle
							x:Name="fillColor"
							Fill="#FFBADDE9"
							IsHitTestVisible="False"
							Opacity="0"
							RadiusY="1"
							RadiusX="1" />
						<Rectangle
							x:Name="fillColor2"
							Fill="#FFBADDE9"
							IsHitTestVisible="False"
							Opacity="0"
							RadiusY="1"
							RadiusX="1" />
						<ContentPresenter
							x:Name="contentPresenter"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Content="{TemplateBinding Content}"
							HorizontalAlignment="Stretch"
							Margin="{TemplateBinding Padding}" />
						<Rectangle
							x:Name="FocusVisualElement"
							RadiusY="1"
							RadiusX="1"
							Stroke="#FF6DBDD1"
							StrokeThickness="1"
							Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		TargetType="Controls:Spinner">
		<Setter
			Property="MaxHeight"
			Value="20" />
		<Setter
			Property="HorizontalAlignment"
			Value="Left" />
		<Setter
			Property="VerticalAlignment"
			Value="Center" />
	</Style>
	<Style x:Key="IconStyle" TargetType="Control">
		<Setter Property="MaxHeight" Value="20" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	<Style x:Key="ButtonIconStyle" TargetType="Control">
		<Setter Property="Width" Value="36" />
		<Setter Property="Height" Value="36" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="IsTabStop" Value="False" />
	</Style>
	<Style x:Key="IconButtonTextStyle" TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlockStyle}">
		<Setter Property="Margin" Value="5,0" />
		<Setter Property="FontSize" Value="{StaticResource ControlTitleBigFontSize}" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	<Style x:Key="ButtonTextStyle" TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlockStyle}">
		<Setter Property="FontSize" Value="24" />
		<Setter Property="Margin" Value="5,0" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	
	<!--Button Style-->
	<Style TargetType="Button" x:Key="ButtonStyle">
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
		<Setter Property="Background" Value="{StaticResource WhiteColor}"/>
		<Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="MinWidth" Value="75" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="{StaticResource WhiteBrush}">
						<Grid.RenderTransform>
							<CompositeTransform/>
						</Grid.RenderTransform>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Workaround"
														Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
														To="{StaticResource BlackColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource BlackColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround"
														Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
														To="{StaticResource WhiteColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Workaround" Duration="0:0:0.1"
														Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
														To="{StaticResource AccentColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround" Duration="0:0:0.1"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource AccentColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround" Duration="0:0:0.1"
														Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
														To="{StaticResource WhiteColor}" />

										<DoubleAnimation Storyboard.TargetName="contentPresenter" Duration="0:0:0.1"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" 
														 To="0.75" />
										<DoubleAnimation Storyboard.TargetName="contentPresenter" Duration="0:0:0.1"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" 
														 To="0.75" />
										
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates"/>
						</VisualStateManager.VisualStateGroups>

						<ContentControl x:Name="Workaround" Visibility="Collapsed"
										BorderBrush="{Binding BorderBrush, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										Background="{Binding Background, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />

						<ContentPresenter x:Name="contentPresenter" RenderTransformOrigin="0.5,0.5"
										  Cursor="Hand"
						                  ContentTemplate="{TemplateBinding ContentTemplate}"
						                  Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
						                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<ContentPresenter.RenderTransform>
								<CompositeTransform x:Name="compositeTransform" />
							</ContentPresenter.RenderTransform>
						</ContentPresenter>
						
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- PasswordCheckBox Style-->
	<Style TargetType="CheckBox" x:Key="PasswordCheckBoxStyle">
		<Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlTitleFontSize}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource WhiteColor}"/>
		<Setter Property="Background" Value="{StaticResource WhiteColor}"/>
		<Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Padding" Value="4,1,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Workaround"
														Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
														To="{StaticResource WhiteColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource WhiteColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround"
														Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
														To="{StaticResource BlackColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Workaround" Duration="0:0:0.1"
														Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
														To="{StaticResource WhiteColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround" Duration="0:0:0.1"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource WhiteColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround" Duration="0:0:0.1"
														Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
														To="{StaticResource AccentColor}" />

										<DoubleAnimation Storyboard.TargetName="grid" Duration="0:0:0.1"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" 
														 To="0.75" />
										<DoubleAnimation Storyboard.TargetName="grid" Duration="0:0:0.1"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" 
														 To="0.75" />

									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
											<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PasswordIcon">
											<SplineDoubleKeyFrame KeyTime="1" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TextboxIcon">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PasswordIcon">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TextboxIcon">
											<SplineDoubleKeyFrame KeyTime="1" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Focused">
									<Storyboard/>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<sys:Boolean>True</sys:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
							<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5"
								  Background="{Binding Background, ElementName=Workaround}">
								<Grid.RenderTransform>
									<CompositeTransform />
								</Grid.RenderTransform>
								<Path Opacity="0" x:Name="CheckIcon" UseLayoutRounding="False"
									  Width="8.9" Height="7.6" Stretch="Fill" Stroke="Black"
									  HorizontalAlignment="Right" VerticalAlignment="Bottom" StrokeStartLineCap="Triangle"
									  StrokeEndLineCap="Triangle" StrokeThickness="2"
									  Data="M49.4375,110.4375 L51.4995,112.812 L56.3745,107.24883" />
								<Icons:PasswordIcon x:Name="PasswordIcon" Style="{StaticResource ButtonIconStyle}"
													Opacity="0"
													Foreground="{Binding Foreground, ElementName=Workaround}" />
								<Icons:TextboxIcon x:Name="TextboxIcon" Style="{StaticResource ButtonIconStyle}"
												   Opacity="0"
												   Foreground="{Binding Foreground, ElementName=Workaround}" />
							</Grid>
							<Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="1" Margin="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
								<ToolTipService.ToolTip>
									<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
										<ToolTip.Triggers>
											<EventTrigger RoutedEvent="Canvas.Loaded">
												<BeginStoryboard>
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
															<DiscreteObjectKeyFrame KeyTime="0">
																<DiscreteObjectKeyFrame.Value>
																	<sys:Boolean>true</sys:Boolean>
																</DiscreteObjectKeyFrame.Value>
															</DiscreteObjectKeyFrame>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</BeginStoryboard>
											</EventTrigger>
										</ToolTip.Triggers>
									</ToolTip>
								</ToolTipService.ToolTip>
								<Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
									<Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="{StaticResource ValidationBrush5}" Margin="0,3,0,0"/>
									<Path Data="M 0,0 L2,0 L 7,5 L7,7" Fill="{StaticResource WhiteColorBrush}" Margin="0,3,0,0"/>
								</Grid>
							</Border>
						</Grid>

						<ContentControl x:Name="Workaround" Visibility="Collapsed"
										BorderBrush="{Binding BorderBrush, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										Background="{Binding Background, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
						
						<ContentControl Grid.Column="1" VerticalAlignment="Center">
							<ContentControl.Foreground>
								<SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource BlackColor}" />
							</ContentControl.Foreground>
							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</ContentControl>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- PasswordCheckBox Style-->
	<Style TargetType="CheckBox" x:Key="RememberMeCheckBoxStyle">
		<Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlTitleFontSize}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource WhiteColor}"/>
		<Setter Property="Background" Value="{StaticResource WhiteColor}"/>
		<Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Padding" Value="4,1,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Workaround"
														Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
														To="{StaticResource WhiteColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource WhiteColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround"
														Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
														To="{StaticResource BlackColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="Workaround" Duration="0:0:0.1"
														Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
														To="{StaticResource WhiteColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround" Duration="0:0:0.1"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource WhiteColor}" />
										<ColorAnimation Storyboard.TargetName="Workaround" Duration="0:0:0.1"
														Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
														To="{StaticResource AccentColor}" />

										<DoubleAnimation Storyboard.TargetName="grid" Duration="0:0:0.1"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" 
														 To="0.75" />
										<DoubleAnimation Storyboard.TargetName="grid" Duration="0:0:0.1"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" 
														 To="0.75" />

									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
											<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PasswordIcon">
											<SplineDoubleKeyFrame KeyTime="1" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TextboxIcon">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PasswordIcon">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TextboxIcon">
											<SplineDoubleKeyFrame KeyTime="1" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Focused">
									<Storyboard/>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<sys:Boolean>True</sys:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
							<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5"
								  Background="{Binding Background, ElementName=Workaround}">
								<Grid.RenderTransform>
									<CompositeTransform />
								</Grid.RenderTransform>
								<Path Opacity="0" x:Name="CheckIcon" UseLayoutRounding="False"
									  Width="8.9" Height="7.6" Stretch="Fill" Stroke="Black"
									  HorizontalAlignment="Right" VerticalAlignment="Bottom" StrokeStartLineCap="Triangle"
									  StrokeEndLineCap="Triangle" StrokeThickness="2"
									  Data="M49.4375,110.4375 L51.4995,112.812 L56.3745,107.24883" />
								<Icons:UnpinIcon x:Name="PasswordIcon" Style="{StaticResource ButtonIconStyle}"
													Opacity="0"
													Foreground="{Binding Foreground, ElementName=Workaround}" />
								<Icons:PinIcon x:Name="TextboxIcon" Style="{StaticResource ButtonIconStyle}"
												   Opacity="0"
												   Foreground="{Binding Foreground, ElementName=Workaround}" />
							</Grid>
							<Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="1" Margin="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
								<ToolTipService.ToolTip>
									<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
										<ToolTip.Triggers>
											<EventTrigger RoutedEvent="Canvas.Loaded">
												<BeginStoryboard>
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
															<DiscreteObjectKeyFrame KeyTime="0">
																<DiscreteObjectKeyFrame.Value>
																	<sys:Boolean>true</sys:Boolean>
																</DiscreteObjectKeyFrame.Value>
															</DiscreteObjectKeyFrame>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</BeginStoryboard>
											</EventTrigger>
										</ToolTip.Triggers>
									</ToolTip>
								</ToolTipService.ToolTip>
								<Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
									<Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="{StaticResource ValidationBrush5}" Margin="0,3,0,0"/>
									<Path Data="M 0,0 L2,0 L 7,5 L7,7" Fill="{StaticResource WhiteColorBrush}" Margin="0,3,0,0"/>
								</Grid>
							</Border>
						</Grid>

						<ContentControl x:Name="Workaround" Visibility="Collapsed"
										BorderBrush="{Binding BorderBrush, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										Foreground="{Binding Foreground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										Background="{Binding Background, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />

						<ContentControl Grid.Column="1" VerticalAlignment="Center">
							<ContentControl.Foreground>
								<SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource BlackColor}" />
							</ContentControl.Foreground>
							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</ContentControl>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--ChildWindow Style-->
	<Style x:Key="ErrorChildWindowStyle" TargetType="controls:ChildWindow">
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="TabNavigation" Value="Cycle"/>
		<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Value="{StaticResource ThumbBrush}" Property="BorderBrush"/>
		<Setter Property="OverlayBrush" Value="{StaticResource PageOverlayBrush}"/>
		<Setter Property="OverlayOpacity" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:ChildWindow">
					<Grid x:Name="Root">
						<Grid.Resources>
							<Style x:Key="ButtonStyle" TargetType="Button">
								<Setter Property="Background" Value="{StaticResource TransparentWhiteBrush}"/>
								<Setter Property="Foreground" Value="{StaticResource BlackColorBrush}"/>
								<Setter Property="Padding" Value="3"/>
								<Setter Property="BorderThickness" Value="1"/>
								<Setter Property="BorderBrush" Value="{StaticResource GrayBrush2}"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="Button">
											<Grid x:Name="grid" Background="{StaticResource TransparentWhiteBrush}" HorizontalAlignment="Center" Height="14" VerticalAlignment="Center" Width="15">
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="CommonStates">
														<VisualState x:Name="Normal"/>
														<VisualState x:Name="MouseOver">
															<Storyboard>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="X_Fuzz2">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																</ObjectAnimationUsingKeyFrames>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="X_Fuzz1">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																</ObjectAnimationUsingKeyFrames>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="X_Fuzz0">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																</ObjectAnimationUsingKeyFrames>
																<DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Pressed">
															<Storyboard>
																<DoubleAnimation Duration="0" To="0.85" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="X_Fuzz2">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																</ObjectAnimationUsingKeyFrames>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="X_Fuzz1">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																</ObjectAnimationUsingKeyFrames>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="X_Fuzz0">
																	<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																</ObjectAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Disabled">
															<Storyboard>
																<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
															</Storyboard>
														</VisualState>
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>
												<Path x:Name="X_Fuzz2" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z" Fill="{StaticResource FuzzBrush2}" HorizontalAlignment="Center" Height="8" Margin="0,-1,0,0" Opacity="1" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="{StaticResource FuzzBrush2}" Visibility="Collapsed" VerticalAlignment="Center" Width="9">
													<Path.RenderTransform>
														<TransformGroup>
															<ScaleTransform ScaleY="1.3" ScaleX="1.3"/>
														</TransformGroup>
													</Path.RenderTransform>
												</Path>
												<Path x:Name="X_Fuzz1" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z" Fill="{StaticResource FuzzBrush1}" HorizontalAlignment="Center" Height="8" Margin="0,-1,0,0" Opacity="1" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="{StaticResource FuzzBrush1}" Visibility="Collapsed" VerticalAlignment="Center" Width="9">
													<Path.RenderTransform>
														<TransformGroup>
															<ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
														</TransformGroup>
													</Path.RenderTransform>
												</Path>
												<Path x:Name="X_Fuzz0" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z" Fill="{StaticResource FuzzBrush3}" HorizontalAlignment="Center" Height="8" Margin="0,-1,0,0" Opacity="1" Stretch="Fill" Stroke="{StaticResource FuzzBrush3}" Visibility="Collapsed" VerticalAlignment="Center" Width="9"/>
												<Path x:Name="X" Stroke="{StaticResource GrayBrush3}" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z" Fill="{StaticResource WhiteColorBrush}" HorizontalAlignment="Center" Height="8" Margin="0,-1,0,0" Opacity="0.7" Stretch="Fill" VerticalAlignment="Center" Width="9"/>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="WindowStates">
								<VisualState x:Name="Open">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Overlay">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="1">
												<EasingDoubleKeyFrame.EasingFunction>
													<PowerEase EasingMode="EaseInOut"/>
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
											<EasingDoubleKeyFrame KeyTime="0:0:0.55" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX" Storyboard.TargetName="ContentRoot">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
											<SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:00.45" Value="1.05"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.55" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY" Storyboard.TargetName="ContentRoot">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
											<SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:00.45" Value="1.05"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.55" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Closed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Overlay">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX" Storyboard.TargetName="ContentRoot">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="1.05"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.45" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY" Storyboard.TargetName="ContentRoot">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="1.05"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.45" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="Overlay" Background="{TemplateBinding OverlayBrush}" HorizontalAlignment="Stretch" Margin="0" Opacity="{TemplateBinding OverlayOpacity}" VerticalAlignment="Top"/>
						<Grid x:Name="ContentRoot" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Height="{TemplateBinding Height}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="{TemplateBinding VerticalAlignment}" Width="{TemplateBinding Width}">
							<Grid.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Grid.RenderTransform>
							<Border BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource WhiteColorBrush}" Effect="{StaticResource DropShadowBrush}">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Border x:Name="Chrome" BorderThickness="0,0,0,1" Width="Auto" Background="Transparent">
										<Grid Height="Auto" Width="Auto">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" />
												<ColumnDefinition/>
												<ColumnDefinition Width="30" />
											</Grid.ColumnDefinitions>
											<Icons:SmileyWhatIcon Grid.Column="0" Margin="15,15,15,10" />
											<ContentControl Content="{TemplateBinding Title}" Grid.Column="1" HorizontalAlignment="Stretch" IsTabStop="False" Margin="0,15,15,10" VerticalAlignment="Center" FontSize="18.667"/>
											<Button x:Name="CloseButton" Grid.Column="2" HorizontalAlignment="Center" Height="14" IsTabStop="False" Style="{StaticResource ButtonStyle}" VerticalAlignment="Top" Width="15" Margin="0,5,0,0"/>
										</Grid>
									</Border>
									<ContentPresenter x:Name="ContentPresenter" Margin="7,0,7,7" Grid.Row="1"
													  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</Grid>
							</Border>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
