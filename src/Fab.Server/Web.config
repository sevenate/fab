<?xml version="1.0" encoding="utf-8"?>

<configuration>
	<configSections>
		<sectionGroup name="common">
			<section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
		</sectionGroup>
	</configSections>

	<!-- Common.Logging with log4net adapter and external config file -->
	<common>
		<logging>
			<factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4net">
				<arg key="configType" value="FILE-WATCH" />
				<arg key="configFile" value="~/log4net.config" />
			</factoryAdapter>
		</logging>
	</common>

	<!-- Configure System.Diagnostics.Trace to route its output to the Common.Logging infrastructure -->
	<!-- There is some issue ("key is null" exception) when used like: Trace.Write("Trace message."),
		 so it is recommended to use separate trace output instead of this "build in redirect" if needed
	-->
	<!--
	<system.diagnostics>
		<trace>
			<listeners>
				<clear />
				<add name="CommonLoggingTraceListener"
					 traceOutputOptions="Callstack"
					 type="Common.Logging.Simple.CommonLoggingTraceListener, Common.Logging"
					 initializeData="LogLevel=Trace" />
			</listeners>
		</trace>
	</system.diagnostics>
	-->
	<!--
	<system.diagnostics>
		<trace autoflush="true" />
		<sources>
			<source name="System.ServiceModel"
					switchValue="Information, ActivityTracing">
				<listeners>
					<add name="sdt"
						 type="System.Diagnostics.XmlWriterTraceListener"
						 initializeData= "D:\temp-svclog.xml" />
				</listeners>
			</source>
		</sources>
	</system.diagnostics>
	-->

	<system.web>
		<compilation debug="true" targetFramework="4.0">
			<assemblies>
				<add assembly="System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
			</assemblies>
		</compilation>
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID" />
		<authentication mode="Windows">
			<forms>
				<credentials passwordFormat="SHA1">
					<user name="admin" password="40BD001563085FC35165329EA1FF5C5ECBDBBEEF" />
				</credentials>
			</forms>
		</authentication>
	</system.web>
	<system.serviceModel>
		<bindings>
			<basicHttpBinding>
				<binding>
					<security mode="TransportWithMessageCredential" />
				</binding>
				<binding name="PublicBinding">
					<security mode="Transport">
						<transport clientCredentialType="None" />
					</security>
				</binding>
			</basicHttpBinding>
			<wsHttpBinding>
				<binding name="AdminBinding">
					<security mode="TransportWithMessageCredential">
						<message clientCredentialType="UserName" />
					</security>
				</binding>
			</wsHttpBinding>
<!--
			<customBinding>
				<binding name="PublicBinding">
					<binaryMessageEncoding></binaryMessageEncoding>
					<httpsTransport></httpsTransport>
				</binding>
			</customBinding>
-->
		</bindings>
		<behaviors>
			<serviceBehaviors>
				<behavior name="UserBehavior">
					<!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
					<serviceMetadata httpGetEnabled="false" httpsGetEnabled="true" />
					<!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
					<serviceDebug httpHelpPageEnabled="false" includeExceptionDetailInFaults="true" />
					<serviceCredentials>
						<userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="Fab.Server.Core.CustomUserNameValidator, Fab.Server" />
					</serviceCredentials>
				</behavior>
				<behavior name="ManagementBehavior">
					<!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
					<serviceMetadata httpGetEnabled="false" httpsGetEnabled="true" />
					<!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
					<serviceDebug httpHelpPageEnabled="false" includeExceptionDetailInFaults="true" />
					<serviceCredentials>
						<userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="Fab.Server.Core.ManagmentServiceValidator, Fab.Server" />
					</serviceCredentials>
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<services>
			<service name="Fab.Server.Core.Services.UserService" behaviorConfiguration="UserBehavior">
				<endpoint name="UserServiceBasic" address="" binding="basicHttpBinding" contract="Fab.Server.Core.Contracts.IUserService" />
			</service>
			<service name="Fab.Server.Core.Services.MoneyService" behaviorConfiguration="UserBehavior">
				<endpoint name="MoneyServiceBasic" address="" binding="basicHttpBinding" contract="Fab.Server.Core.Contracts.IMoneyService" />
			</service>
			<service name="Fab.Server.Core.Services.AdminService" behaviorConfiguration="ManagementBehavior">
				<endpoint name="AdminServiceBasic" address="" binding="wsHttpBinding" bindingConfiguration="AdminBinding" contract="Fab.Server.Core.Contracts.IAdminService" />
			</service>
			<service name="Fab.Server.Core.Services.RegistrationService" behaviorConfiguration="UserBehavior">
				<endpoint name="RegistrationServiceBasic" address="" binding="basicHttpBinding" bindingConfiguration="PublicBinding" contract="Fab.Server.Core.Contracts.IRegistrationService" />
			</service>
		</services>
		<serviceHostingEnvironment aspNetCompatibilityEnabled="false" multipleSiteBindingsEnabled="true">
			<serviceActivations>
				<clear />
				<add relativeAddress="UserService.svc" service="Fab.Server.Core.Services.UserService" />
				<add relativeAddress="MoneyService.svc" service="Fab.Server.Core.Services.MoneyService" />
				<add relativeAddress="AdminService.svc" service="Fab.Server.Core.Services.AdminService" />
				<add relativeAddress="RegistrationService.svc" service="Fab.Server.Core.Services.RegistrationService" />
			</serviceActivations>
		</serviceHostingEnvironment>
	</system.serviceModel>
	<system.webServer>
		<modules runAllManagedModulesForAllRequests="true" />
		<directoryBrowse enabled="false" />
		<defaultDocument>
			<files>
				<clear />
				<add value="index.html" />
				<add value="default.aspx" />
			</files>
		</defaultDocument>
	</system.webServer>
	<system.codedom />
	<connectionStrings>
		<add name="ModelContainer" connectionString="metadata=res://*/Core.Model.csdl|res://*/Core.Model.ssdl|res://*/Core.Model.msl;provider=System.Data.SqlServerCe.4.0;provider connection string=&quot;Data Source=|DataDirectory|\personal.sdf;&quot;" providerName="System.Data.EntityClient" />
		<add name="MasterEntities" connectionString="metadata=res://*/Core.Master.csdl|res://*/Core.Master.ssdl|res://*/Core.Master.msl;provider=System.Data.SqlServerCe.4.0;provider connection string=&quot;Data Source=|DataDirectory|\master.sdf;&quot;" providerName="System.Data.EntityClient" />
	</connectionStrings>
	<system.data>
		<DbProviderFactories>
			<remove invariant="System.Data.SqlServerCe.4.0" />
			<add name="Microsoft SQL Server Compact Edition Client Data Provider 4.0" invariant="System.Data.SqlServerCe.4.0" description=".NET Framework Data Provider for Microsoft SQL Server Compact Edition Client 4.0" type="System.Data.SqlServerCe.SqlCeProviderFactory, System.Data.SqlServerCe, Version=4.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
		</DbProviderFactories>
	</system.data>
    <appSettings>
		<add key="DataDirectory" value="App_Data\" />
	</appSettings>
</configuration>