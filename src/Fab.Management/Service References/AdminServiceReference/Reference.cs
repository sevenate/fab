//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17020
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fab.Managment.AdminServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryFilter", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.Filters")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.TextSearchFilter))]
    public partial class QueryFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NotOlderThenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SkipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UptoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NotOlderThen {
            get {
                return this.NotOlderThenField;
            }
            set {
                if ((this.NotOlderThenField.Equals(value) != true)) {
                    this.NotOlderThenField = value;
                    this.RaisePropertyChanged("NotOlderThen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Skip {
            get {
                return this.SkipField;
            }
            set {
                if ((this.SkipField.Equals(value) != true)) {
                    this.SkipField = value;
                    this.RaisePropertyChanged("Skip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Take {
            get {
                return this.TakeField;
            }
            set {
                if ((this.TakeField.Equals(value) != true)) {
                    this.TakeField = value;
                    this.RaisePropertyChanged("Take");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Upto {
            get {
                return this.UptoField;
            }
            set {
                if ((this.UptoField.Equals(value) != true)) {
                    this.UptoField = value;
                    this.RaisePropertyChanged("Upto");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextSearchFilter", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.Filters")]
    [System.SerializableAttribute()]
    public partial class TextSearchFilter : Fab.Managment.AdminServiceReference.QueryFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contains {
            get {
                return this.ContainsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainsField, value) != true)) {
                    this.ContainsField = value;
                    this.RaisePropertyChanged("Contains");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class FaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdminUserDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class AdminUserDTO : Fab.Managment.AdminServiceReference.UserDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabasePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DatabaseSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DisabledChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FreeDiskSpaceAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabasePath {
            get {
                return this.DatabasePathField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabasePathField, value) != true)) {
                    this.DatabasePathField = value;
                    this.RaisePropertyChanged("DatabasePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DatabaseSize {
            get {
                return this.DatabaseSizeField;
            }
            set {
                if ((this.DatabaseSizeField.Equals(value) != true)) {
                    this.DatabaseSizeField = value;
                    this.RaisePropertyChanged("DatabaseSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DisabledChanged {
            get {
                return this.DisabledChangedField;
            }
            set {
                if ((this.DisabledChangedField.Equals(value) != true)) {
                    this.DisabledChangedField = value;
                    this.RaisePropertyChanged("DisabledChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FreeDiskSpaceAvailable {
            get {
                return this.FreeDiskSpaceAvailableField;
            }
            set {
                if ((this.FreeDiskSpaceAvailableField.Equals(value) != true)) {
                    this.FreeDiskSpaceAvailableField = value;
                    this.RaisePropertyChanged("FreeDiskSpaceAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisabled {
            get {
                return this.IsDisabledField;
            }
            set {
                if ((this.IsDisabledField.Equals(value) != true)) {
                    this.IsDisabledField = value;
                    this.RaisePropertyChanged("IsDisabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastAccess {
            get {
                return this.LastAccessField;
            }
            set {
                if ((this.LastAccessField.Equals(value) != true)) {
                    this.LastAccessField = value;
                    this.RaisePropertyChanged("LastAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.AdminUserDTO))]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegisteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Registered {
            get {
                return this.RegisteredField;
            }
            set {
                if ((this.RegisteredField.Equals(value) != true)) {
                    this.RegisteredField = value;
                    this.RaisePropertyChanged("Registered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceUrl {
            get {
                return this.ServiceUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceUrlField, value) != true)) {
                    this.ServiceUrlField = value;
                    this.RaisePropertyChanged("ServiceUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminServiceReference.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetUsersCount", ReplyAction="http://tempuri.org/IAdminService/GetUsersCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail), Action="http://tempuri.org/IAdminService/GetUsersCountFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.QueryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.TextSearchFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.AdminUserDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.AdminUserDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.UserDTO))]
        int GetUsersCount(object queryFilter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdminService/GetUsersCount", ReplyAction="http://tempuri.org/IAdminService/GetUsersCountResponse")]
        System.IAsyncResult BeginGetUsersCount(object queryFilter, System.AsyncCallback callback, object asyncState);
        
        int EndGetUsersCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetUsers", ReplyAction="http://tempuri.org/IAdminService/GetUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail), Action="http://tempuri.org/IAdminService/GetUsersFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.QueryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.TextSearchFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.AdminUserDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.AdminUserDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Managment.AdminServiceReference.UserDTO))]
        Fab.Managment.AdminServiceReference.AdminUserDTO[] GetUsers(object queryFilter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdminService/GetUsers", ReplyAction="http://tempuri.org/IAdminService/GetUsersResponse")]
        System.IAsyncResult BeginGetUsers(object queryFilter, System.AsyncCallback callback, object asyncState);
        
        Fab.Managment.AdminServiceReference.AdminUserDTO[] EndGetUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteUser", ReplyAction="http://tempuri.org/IAdminService/DeleteUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail), Action="http://tempuri.org/IAdminService/DeleteUserFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        void DeleteUser(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdminService/DeleteUser", ReplyAction="http://tempuri.org/IAdminService/DeleteUserResponse")]
        System.IAsyncResult BeginDeleteUser(System.Guid userId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateUser", ReplyAction="http://tempuri.org/IAdminService/UpdateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail), Action="http://tempuri.org/IAdminService/UpdateUserFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.DateTime UpdateUser(Fab.Managment.AdminServiceReference.AdminUserDTO userDto);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdminService/UpdateUser", ReplyAction="http://tempuri.org/IAdminService/UpdateUserResponse")]
        System.IAsyncResult BeginUpdateUser(Fab.Managment.AdminServiceReference.AdminUserDTO userDto, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndUpdateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/OptimizeUserDatabase", ReplyAction="http://tempuri.org/IAdminService/OptimizeUserDatabaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail), Action="http://tempuri.org/IAdminService/OptimizeUserDatabaseFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        long OptimizeUserDatabase(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdminService/OptimizeUserDatabase", ReplyAction="http://tempuri.org/IAdminService/OptimizeUserDatabaseResponse")]
        System.IAsyncResult BeginOptimizeUserDatabase(System.Guid userId, System.AsyncCallback callback, object asyncState);
        
        long EndOptimizeUserDatabase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/VerifyUserDatabase", ReplyAction="http://tempuri.org/IAdminService/VerifyUserDatabaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail), Action="http://tempuri.org/IAdminService/VerifyUserDatabaseFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        bool VerifyUserDatabase(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdminService/VerifyUserDatabase", ReplyAction="http://tempuri.org/IAdminService/VerifyUserDatabaseResponse")]
        System.IAsyncResult BeginVerifyUserDatabase(System.Guid userId, System.AsyncCallback callback, object asyncState);
        
        bool EndVerifyUserDatabase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RepairUserDatabase", ReplyAction="http://tempuri.org/IAdminService/RepairUserDatabaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail), Action="http://tempuri.org/IAdminService/RepairUserDatabaseFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        long RepairUserDatabase(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdminService/RepairUserDatabase", ReplyAction="http://tempuri.org/IAdminService/RepairUserDatabaseResponse")]
        System.IAsyncResult BeginRepairUserDatabase(System.Guid userId, System.AsyncCallback callback, object asyncState);
        
        long EndRepairUserDatabase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/OptimizeMasterDatabase", ReplyAction="http://tempuri.org/IAdminService/OptimizeMasterDatabaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail), Action="http://tempuri.org/IAdminService/OptimizeMasterDatabaseFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        long OptimizeMasterDatabase();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdminService/OptimizeMasterDatabase", ReplyAction="http://tempuri.org/IAdminService/OptimizeMasterDatabaseResponse")]
        System.IAsyncResult BeginOptimizeMasterDatabase(System.AsyncCallback callback, object asyncState);
        
        long EndOptimizeMasterDatabase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/VerifyMasterDatabase", ReplyAction="http://tempuri.org/IAdminService/VerifyMasterDatabaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail), Action="http://tempuri.org/IAdminService/VerifyMasterDatabaseFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        bool VerifyMasterDatabase();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdminService/VerifyMasterDatabase", ReplyAction="http://tempuri.org/IAdminService/VerifyMasterDatabaseResponse")]
        System.IAsyncResult BeginVerifyMasterDatabase(System.AsyncCallback callback, object asyncState);
        
        bool EndVerifyMasterDatabase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RepairMasterDatabase", ReplyAction="http://tempuri.org/IAdminService/RepairMasterDatabaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Managment.AdminServiceReference.FaultDetail), Action="http://tempuri.org/IAdminService/RepairMasterDatabaseFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        long RepairMasterDatabase();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdminService/RepairMasterDatabase", ReplyAction="http://tempuri.org/IAdminService/RepairMasterDatabaseResponse")]
        System.IAsyncResult BeginRepairMasterDatabase(System.AsyncCallback callback, object asyncState);
        
        long EndRepairMasterDatabase(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : Fab.Managment.AdminServiceReference.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Fab.Managment.AdminServiceReference.AdminUserDTO[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Fab.Managment.AdminServiceReference.AdminUserDTO[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OptimizeUserDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OptimizeUserDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerifyUserDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerifyUserDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RepairUserDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RepairUserDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OptimizeMasterDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OptimizeMasterDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerifyMasterDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerifyMasterDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RepairMasterDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RepairMasterDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<Fab.Managment.AdminServiceReference.IAdminService>, Fab.Managment.AdminServiceReference.IAdminService {
        
        private BeginOperationDelegate onBeginGetUsersCountDelegate;
        
        private EndOperationDelegate onEndGetUsersCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersDelegate;
        
        private EndOperationDelegate onEndGetUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserDelegate;
        
        private EndOperationDelegate onEndDeleteUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateUserDelegate;
        
        private EndOperationDelegate onEndUpdateUserDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginOptimizeUserDatabaseDelegate;
        
        private EndOperationDelegate onEndOptimizeUserDatabaseDelegate;
        
        private System.Threading.SendOrPostCallback onOptimizeUserDatabaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginVerifyUserDatabaseDelegate;
        
        private EndOperationDelegate onEndVerifyUserDatabaseDelegate;
        
        private System.Threading.SendOrPostCallback onVerifyUserDatabaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginRepairUserDatabaseDelegate;
        
        private EndOperationDelegate onEndRepairUserDatabaseDelegate;
        
        private System.Threading.SendOrPostCallback onRepairUserDatabaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginOptimizeMasterDatabaseDelegate;
        
        private EndOperationDelegate onEndOptimizeMasterDatabaseDelegate;
        
        private System.Threading.SendOrPostCallback onOptimizeMasterDatabaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginVerifyMasterDatabaseDelegate;
        
        private EndOperationDelegate onEndVerifyMasterDatabaseDelegate;
        
        private System.Threading.SendOrPostCallback onVerifyMasterDatabaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginRepairMasterDatabaseDelegate;
        
        private EndOperationDelegate onEndRepairMasterDatabaseDelegate;
        
        private System.Threading.SendOrPostCallback onRepairMasterDatabaseCompletedDelegate;
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetUsersCountCompletedEventArgs> GetUsersCountCompleted;
        
        public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteUserCompleted;
        
        public event System.EventHandler<UpdateUserCompletedEventArgs> UpdateUserCompleted;
        
        public event System.EventHandler<OptimizeUserDatabaseCompletedEventArgs> OptimizeUserDatabaseCompleted;
        
        public event System.EventHandler<VerifyUserDatabaseCompletedEventArgs> VerifyUserDatabaseCompleted;
        
        public event System.EventHandler<RepairUserDatabaseCompletedEventArgs> RepairUserDatabaseCompleted;
        
        public event System.EventHandler<OptimizeMasterDatabaseCompletedEventArgs> OptimizeMasterDatabaseCompleted;
        
        public event System.EventHandler<VerifyMasterDatabaseCompletedEventArgs> VerifyMasterDatabaseCompleted;
        
        public event System.EventHandler<RepairMasterDatabaseCompletedEventArgs> RepairMasterDatabaseCompleted;
        
        public int GetUsersCount(object queryFilter) {
            return base.Channel.GetUsersCount(queryFilter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUsersCount(object queryFilter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersCount(queryFilter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetUsersCount(System.IAsyncResult result) {
            return base.Channel.EndGetUsersCount(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            object queryFilter = ((object)(inValues[0]));
            return this.BeginGetUsersCount(queryFilter, callback, asyncState);
        }
        
        private object[] OnEndGetUsersCount(System.IAsyncResult result) {
            int retVal = this.EndGetUsersCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCountCompleted(object state) {
            if ((this.GetUsersCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCountCompleted(this, new GetUsersCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersCountAsync(object queryFilter) {
            this.GetUsersCountAsync(queryFilter, null);
        }
        
        public void GetUsersCountAsync(object queryFilter, object userState) {
            if ((this.onBeginGetUsersCountDelegate == null)) {
                this.onBeginGetUsersCountDelegate = new BeginOperationDelegate(this.OnBeginGetUsersCount);
            }
            if ((this.onEndGetUsersCountDelegate == null)) {
                this.onEndGetUsersCountDelegate = new EndOperationDelegate(this.OnEndGetUsersCount);
            }
            if ((this.onGetUsersCountCompletedDelegate == null)) {
                this.onGetUsersCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersCountDelegate, new object[] {
                        queryFilter}, this.onEndGetUsersCountDelegate, this.onGetUsersCountCompletedDelegate, userState);
        }
        
        public Fab.Managment.AdminServiceReference.AdminUserDTO[] GetUsers(object queryFilter) {
            return base.Channel.GetUsers(queryFilter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUsers(object queryFilter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsers(queryFilter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Fab.Managment.AdminServiceReference.AdminUserDTO[] EndGetUsers(System.IAsyncResult result) {
            return base.Channel.EndGetUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            object queryFilter = ((object)(inValues[0]));
            return this.BeginGetUsers(queryFilter, callback, asyncState);
        }
        
        private object[] OnEndGetUsers(System.IAsyncResult result) {
            Fab.Managment.AdminServiceReference.AdminUserDTO[] retVal = this.EndGetUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCompleted(object state) {
            if ((this.GetUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersAsync(object queryFilter) {
            this.GetUsersAsync(queryFilter, null);
        }
        
        public void GetUsersAsync(object queryFilter, object userState) {
            if ((this.onBeginGetUsersDelegate == null)) {
                this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
            }
            if ((this.onEndGetUsersDelegate == null)) {
                this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
            }
            if ((this.onGetUsersCompletedDelegate == null)) {
                this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersDelegate, new object[] {
                        queryFilter}, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
        }
        
        public void DeleteUser(System.Guid userId) {
            base.Channel.DeleteUser(userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteUser(System.Guid userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUser(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteUser(System.IAsyncResult result) {
            base.Channel.EndDeleteUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            return this.BeginDeleteUser(userId, callback, asyncState);
        }
        
        private object[] OnEndDeleteUser(System.IAsyncResult result) {
            this.EndDeleteUser(result);
            return null;
        }
        
        private void OnDeleteUserCompleted(object state) {
            if ((this.DeleteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserAsync(System.Guid userId) {
            this.DeleteUserAsync(userId, null);
        }
        
        public void DeleteUserAsync(System.Guid userId, object userState) {
            if ((this.onBeginDeleteUserDelegate == null)) {
                this.onBeginDeleteUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteUser);
            }
            if ((this.onEndDeleteUserDelegate == null)) {
                this.onEndDeleteUserDelegate = new EndOperationDelegate(this.OnEndDeleteUser);
            }
            if ((this.onDeleteUserCompletedDelegate == null)) {
                this.onDeleteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserDelegate, new object[] {
                        userId}, this.onEndDeleteUserDelegate, this.onDeleteUserCompletedDelegate, userState);
        }
        
        public System.DateTime UpdateUser(Fab.Managment.AdminServiceReference.AdminUserDTO userDto) {
            return base.Channel.UpdateUser(userDto);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateUser(Fab.Managment.AdminServiceReference.AdminUserDTO userDto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateUser(userDto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndUpdateUser(System.IAsyncResult result) {
            return base.Channel.EndUpdateUser(result);
        }
        
        private System.IAsyncResult OnBeginUpdateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Fab.Managment.AdminServiceReference.AdminUserDTO userDto = ((Fab.Managment.AdminServiceReference.AdminUserDTO)(inValues[0]));
            return this.BeginUpdateUser(userDto, callback, asyncState);
        }
        
        private object[] OnEndUpdateUser(System.IAsyncResult result) {
            System.DateTime retVal = this.EndUpdateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateUserCompleted(object state) {
            if ((this.UpdateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateUserAsync(Fab.Managment.AdminServiceReference.AdminUserDTO userDto) {
            this.UpdateUserAsync(userDto, null);
        }
        
        public void UpdateUserAsync(Fab.Managment.AdminServiceReference.AdminUserDTO userDto, object userState) {
            if ((this.onBeginUpdateUserDelegate == null)) {
                this.onBeginUpdateUserDelegate = new BeginOperationDelegate(this.OnBeginUpdateUser);
            }
            if ((this.onEndUpdateUserDelegate == null)) {
                this.onEndUpdateUserDelegate = new EndOperationDelegate(this.OnEndUpdateUser);
            }
            if ((this.onUpdateUserCompletedDelegate == null)) {
                this.onUpdateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateUserCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateUserDelegate, new object[] {
                        userDto}, this.onEndUpdateUserDelegate, this.onUpdateUserCompletedDelegate, userState);
        }
        
        public long OptimizeUserDatabase(System.Guid userId) {
            return base.Channel.OptimizeUserDatabase(userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOptimizeUserDatabase(System.Guid userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOptimizeUserDatabase(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndOptimizeUserDatabase(System.IAsyncResult result) {
            return base.Channel.EndOptimizeUserDatabase(result);
        }
        
        private System.IAsyncResult OnBeginOptimizeUserDatabase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            return this.BeginOptimizeUserDatabase(userId, callback, asyncState);
        }
        
        private object[] OnEndOptimizeUserDatabase(System.IAsyncResult result) {
            long retVal = this.EndOptimizeUserDatabase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOptimizeUserDatabaseCompleted(object state) {
            if ((this.OptimizeUserDatabaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OptimizeUserDatabaseCompleted(this, new OptimizeUserDatabaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OptimizeUserDatabaseAsync(System.Guid userId) {
            this.OptimizeUserDatabaseAsync(userId, null);
        }
        
        public void OptimizeUserDatabaseAsync(System.Guid userId, object userState) {
            if ((this.onBeginOptimizeUserDatabaseDelegate == null)) {
                this.onBeginOptimizeUserDatabaseDelegate = new BeginOperationDelegate(this.OnBeginOptimizeUserDatabase);
            }
            if ((this.onEndOptimizeUserDatabaseDelegate == null)) {
                this.onEndOptimizeUserDatabaseDelegate = new EndOperationDelegate(this.OnEndOptimizeUserDatabase);
            }
            if ((this.onOptimizeUserDatabaseCompletedDelegate == null)) {
                this.onOptimizeUserDatabaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOptimizeUserDatabaseCompleted);
            }
            base.InvokeAsync(this.onBeginOptimizeUserDatabaseDelegate, new object[] {
                        userId}, this.onEndOptimizeUserDatabaseDelegate, this.onOptimizeUserDatabaseCompletedDelegate, userState);
        }
        
        public bool VerifyUserDatabase(System.Guid userId) {
            return base.Channel.VerifyUserDatabase(userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVerifyUserDatabase(System.Guid userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerifyUserDatabase(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndVerifyUserDatabase(System.IAsyncResult result) {
            return base.Channel.EndVerifyUserDatabase(result);
        }
        
        private System.IAsyncResult OnBeginVerifyUserDatabase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            return this.BeginVerifyUserDatabase(userId, callback, asyncState);
        }
        
        private object[] OnEndVerifyUserDatabase(System.IAsyncResult result) {
            bool retVal = this.EndVerifyUserDatabase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerifyUserDatabaseCompleted(object state) {
            if ((this.VerifyUserDatabaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerifyUserDatabaseCompleted(this, new VerifyUserDatabaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerifyUserDatabaseAsync(System.Guid userId) {
            this.VerifyUserDatabaseAsync(userId, null);
        }
        
        public void VerifyUserDatabaseAsync(System.Guid userId, object userState) {
            if ((this.onBeginVerifyUserDatabaseDelegate == null)) {
                this.onBeginVerifyUserDatabaseDelegate = new BeginOperationDelegate(this.OnBeginVerifyUserDatabase);
            }
            if ((this.onEndVerifyUserDatabaseDelegate == null)) {
                this.onEndVerifyUserDatabaseDelegate = new EndOperationDelegate(this.OnEndVerifyUserDatabase);
            }
            if ((this.onVerifyUserDatabaseCompletedDelegate == null)) {
                this.onVerifyUserDatabaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyUserDatabaseCompleted);
            }
            base.InvokeAsync(this.onBeginVerifyUserDatabaseDelegate, new object[] {
                        userId}, this.onEndVerifyUserDatabaseDelegate, this.onVerifyUserDatabaseCompletedDelegate, userState);
        }
        
        public long RepairUserDatabase(System.Guid userId) {
            return base.Channel.RepairUserDatabase(userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRepairUserDatabase(System.Guid userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRepairUserDatabase(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndRepairUserDatabase(System.IAsyncResult result) {
            return base.Channel.EndRepairUserDatabase(result);
        }
        
        private System.IAsyncResult OnBeginRepairUserDatabase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            return this.BeginRepairUserDatabase(userId, callback, asyncState);
        }
        
        private object[] OnEndRepairUserDatabase(System.IAsyncResult result) {
            long retVal = this.EndRepairUserDatabase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRepairUserDatabaseCompleted(object state) {
            if ((this.RepairUserDatabaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RepairUserDatabaseCompleted(this, new RepairUserDatabaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RepairUserDatabaseAsync(System.Guid userId) {
            this.RepairUserDatabaseAsync(userId, null);
        }
        
        public void RepairUserDatabaseAsync(System.Guid userId, object userState) {
            if ((this.onBeginRepairUserDatabaseDelegate == null)) {
                this.onBeginRepairUserDatabaseDelegate = new BeginOperationDelegate(this.OnBeginRepairUserDatabase);
            }
            if ((this.onEndRepairUserDatabaseDelegate == null)) {
                this.onEndRepairUserDatabaseDelegate = new EndOperationDelegate(this.OnEndRepairUserDatabase);
            }
            if ((this.onRepairUserDatabaseCompletedDelegate == null)) {
                this.onRepairUserDatabaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRepairUserDatabaseCompleted);
            }
            base.InvokeAsync(this.onBeginRepairUserDatabaseDelegate, new object[] {
                        userId}, this.onEndRepairUserDatabaseDelegate, this.onRepairUserDatabaseCompletedDelegate, userState);
        }
        
        public long OptimizeMasterDatabase() {
            return base.Channel.OptimizeMasterDatabase();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOptimizeMasterDatabase(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOptimizeMasterDatabase(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndOptimizeMasterDatabase(System.IAsyncResult result) {
            return base.Channel.EndOptimizeMasterDatabase(result);
        }
        
        private System.IAsyncResult OnBeginOptimizeMasterDatabase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginOptimizeMasterDatabase(callback, asyncState);
        }
        
        private object[] OnEndOptimizeMasterDatabase(System.IAsyncResult result) {
            long retVal = this.EndOptimizeMasterDatabase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOptimizeMasterDatabaseCompleted(object state) {
            if ((this.OptimizeMasterDatabaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OptimizeMasterDatabaseCompleted(this, new OptimizeMasterDatabaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OptimizeMasterDatabaseAsync() {
            this.OptimizeMasterDatabaseAsync(null);
        }
        
        public void OptimizeMasterDatabaseAsync(object userState) {
            if ((this.onBeginOptimizeMasterDatabaseDelegate == null)) {
                this.onBeginOptimizeMasterDatabaseDelegate = new BeginOperationDelegate(this.OnBeginOptimizeMasterDatabase);
            }
            if ((this.onEndOptimizeMasterDatabaseDelegate == null)) {
                this.onEndOptimizeMasterDatabaseDelegate = new EndOperationDelegate(this.OnEndOptimizeMasterDatabase);
            }
            if ((this.onOptimizeMasterDatabaseCompletedDelegate == null)) {
                this.onOptimizeMasterDatabaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOptimizeMasterDatabaseCompleted);
            }
            base.InvokeAsync(this.onBeginOptimizeMasterDatabaseDelegate, null, this.onEndOptimizeMasterDatabaseDelegate, this.onOptimizeMasterDatabaseCompletedDelegate, userState);
        }
        
        public bool VerifyMasterDatabase() {
            return base.Channel.VerifyMasterDatabase();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVerifyMasterDatabase(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerifyMasterDatabase(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndVerifyMasterDatabase(System.IAsyncResult result) {
            return base.Channel.EndVerifyMasterDatabase(result);
        }
        
        private System.IAsyncResult OnBeginVerifyMasterDatabase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginVerifyMasterDatabase(callback, asyncState);
        }
        
        private object[] OnEndVerifyMasterDatabase(System.IAsyncResult result) {
            bool retVal = this.EndVerifyMasterDatabase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerifyMasterDatabaseCompleted(object state) {
            if ((this.VerifyMasterDatabaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerifyMasterDatabaseCompleted(this, new VerifyMasterDatabaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerifyMasterDatabaseAsync() {
            this.VerifyMasterDatabaseAsync(null);
        }
        
        public void VerifyMasterDatabaseAsync(object userState) {
            if ((this.onBeginVerifyMasterDatabaseDelegate == null)) {
                this.onBeginVerifyMasterDatabaseDelegate = new BeginOperationDelegate(this.OnBeginVerifyMasterDatabase);
            }
            if ((this.onEndVerifyMasterDatabaseDelegate == null)) {
                this.onEndVerifyMasterDatabaseDelegate = new EndOperationDelegate(this.OnEndVerifyMasterDatabase);
            }
            if ((this.onVerifyMasterDatabaseCompletedDelegate == null)) {
                this.onVerifyMasterDatabaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyMasterDatabaseCompleted);
            }
            base.InvokeAsync(this.onBeginVerifyMasterDatabaseDelegate, null, this.onEndVerifyMasterDatabaseDelegate, this.onVerifyMasterDatabaseCompletedDelegate, userState);
        }
        
        public long RepairMasterDatabase() {
            return base.Channel.RepairMasterDatabase();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRepairMasterDatabase(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRepairMasterDatabase(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndRepairMasterDatabase(System.IAsyncResult result) {
            return base.Channel.EndRepairMasterDatabase(result);
        }
        
        private System.IAsyncResult OnBeginRepairMasterDatabase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginRepairMasterDatabase(callback, asyncState);
        }
        
        private object[] OnEndRepairMasterDatabase(System.IAsyncResult result) {
            long retVal = this.EndRepairMasterDatabase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRepairMasterDatabaseCompleted(object state) {
            if ((this.RepairMasterDatabaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RepairMasterDatabaseCompleted(this, new RepairMasterDatabaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RepairMasterDatabaseAsync() {
            this.RepairMasterDatabaseAsync(null);
        }
        
        public void RepairMasterDatabaseAsync(object userState) {
            if ((this.onBeginRepairMasterDatabaseDelegate == null)) {
                this.onBeginRepairMasterDatabaseDelegate = new BeginOperationDelegate(this.OnBeginRepairMasterDatabase);
            }
            if ((this.onEndRepairMasterDatabaseDelegate == null)) {
                this.onEndRepairMasterDatabaseDelegate = new EndOperationDelegate(this.OnEndRepairMasterDatabase);
            }
            if ((this.onRepairMasterDatabaseCompletedDelegate == null)) {
                this.onRepairMasterDatabaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRepairMasterDatabaseCompleted);
            }
            base.InvokeAsync(this.onBeginRepairMasterDatabaseDelegate, null, this.onEndRepairMasterDatabaseDelegate, this.onRepairMasterDatabaseCompletedDelegate, userState);
        }
    }
}
