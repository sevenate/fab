//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 11.0.50522.1
// 
namespace Fab.Metro.MoneyServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    public partial class AccountDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AssetTypeIdField;
        
        private decimal BalanceField;
        
        private System.DateTime CreatedField;
        
        private System.Nullable<System.DateTime> FirstPostingDateField;
        
        private int IdField;
        
        private System.Nullable<System.DateTime> LastPostingDateField;
        
        private string NameField;
        
        private decimal PostingsCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetTypeId {
            get {
                return this.AssetTypeIdField;
            }
            set {
                if ((this.AssetTypeIdField.Equals(value) != true)) {
                    this.AssetTypeIdField = value;
                    this.RaisePropertyChanged("AssetTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstPostingDate {
            get {
                return this.FirstPostingDateField;
            }
            set {
                if ((this.FirstPostingDateField.Equals(value) != true)) {
                    this.FirstPostingDateField = value;
                    this.RaisePropertyChanged("FirstPostingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastPostingDate {
            get {
                return this.LastPostingDateField;
            }
            set {
                if ((this.LastPostingDateField.Equals(value) != true)) {
                    this.LastPostingDateField = value;
                    this.RaisePropertyChanged("LastPostingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PostingsCount {
            get {
                return this.PostingsCountField;
            }
            set {
                if ((this.PostingsCountField.Equals(value) != true)) {
                    this.PostingsCountField = value;
                    this.RaisePropertyChanged("PostingsCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryType", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.Enums")]
    public enum CategoryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Common = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Withdrawal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deposit = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    public partial class CategoryDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Fab.Metro.MoneyServiceReference.CategoryType CategoryTypeField;
        
        private int IdField;
        
        private string NameField;
        
        private int PopularityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Fab.Metro.MoneyServiceReference.CategoryType CategoryType {
            get {
                return this.CategoryTypeField;
            }
            set {
                if ((this.CategoryTypeField.Equals(value) != true)) {
                    this.CategoryTypeField = value;
                    this.RaisePropertyChanged("CategoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Popularity {
            get {
                return this.PopularityField;
            }
            set {
                if ((this.PopularityField.Equals(value) != true)) {
                    this.PopularityField = value;
                    this.RaisePropertyChanged("Popularity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JournalDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.TransactionDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.DepositDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.WithdrawalDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.TransferDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.IncomingTransferDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.OutgoingTransferDTO))]
    public partial class JournalDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal AmountField;
        
        private string CommentField;
        
        private System.DateTime DateField;
        
        private int IdField;
        
        private decimal QuantityField;
        
        private decimal RateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.DepositDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.WithdrawalDTO))]
    public partial class TransactionDTO : Fab.Metro.MoneyServiceReference.JournalDTO {
        
        private System.Nullable<int> CategoryIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    public partial class DepositDTO : Fab.Metro.MoneyServiceReference.TransactionDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WithdrawalDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    public partial class WithdrawalDTO : Fab.Metro.MoneyServiceReference.TransactionDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.IncomingTransferDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.OutgoingTransferDTO))]
    public partial class TransferDTO : Fab.Metro.MoneyServiceReference.JournalDTO {
        
        private System.Nullable<int> SecondAccountIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SecondAccountId {
            get {
                return this.SecondAccountIdField;
            }
            set {
                if ((this.SecondAccountIdField.Equals(value) != true)) {
                    this.SecondAccountIdField = value;
                    this.RaisePropertyChanged("SecondAccountId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncomingTransferDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    public partial class IncomingTransferDTO : Fab.Metro.MoneyServiceReference.TransferDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutgoingTransferDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    public partial class OutgoingTransferDTO : Fab.Metro.MoneyServiceReference.TransferDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryFilter", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.Filters")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.CategoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.TextSearchFilter))]
    public partial class QueryFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> NotOlderThenField;
        
        private System.Nullable<int> SkipField;
        
        private System.Nullable<int> TakeField;
        
        private System.Nullable<System.DateTime> UptoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NotOlderThen {
            get {
                return this.NotOlderThenField;
            }
            set {
                if ((this.NotOlderThenField.Equals(value) != true)) {
                    this.NotOlderThenField = value;
                    this.RaisePropertyChanged("NotOlderThen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Skip {
            get {
                return this.SkipField;
            }
            set {
                if ((this.SkipField.Equals(value) != true)) {
                    this.SkipField = value;
                    this.RaisePropertyChanged("Skip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Take {
            get {
                return this.TakeField;
            }
            set {
                if ((this.TakeField.Equals(value) != true)) {
                    this.TakeField = value;
                    this.RaisePropertyChanged("Take");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Upto {
            get {
                return this.UptoField;
            }
            set {
                if ((this.UptoField.Equals(value) != true)) {
                    this.UptoField = value;
                    this.RaisePropertyChanged("Upto");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryFilter", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.Filters")]
    public partial class CategoryFilter : Fab.Metro.MoneyServiceReference.QueryFilter {
        
        private System.Nullable<int> CategoryIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextSearchFilter", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.Filters")]
    public partial class TextSearchFilter : Fab.Metro.MoneyServiceReference.QueryFilter {
        
        private string ContainsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contains {
            get {
                return this.ContainsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainsField, value) != true)) {
                    this.ContainsField = value;
                    this.RaisePropertyChanged("Contains");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    public partial class FaultDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorCodeField;
        
        private string ErrorMessageField;
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
    public partial class AssetTypeDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MoneyServiceReference.IMoneyService")]
    public interface IMoneyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/CreateAccount", ReplyAction="http://tempuri.org/IMoneyService/CreateAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/CreateAccountFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<int> CreateAccountAsync(string name, int assetTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/GetAccount", ReplyAction="http://tempuri.org/IMoneyService/GetAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/GetAccountFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.AccountDTO> GetAccountAsync(int accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/UpdateAccount", ReplyAction="http://tempuri.org/IMoneyService/UpdateAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/UpdateAccountFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task UpdateAccountAsync(int accountId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/DeleteAccount", ReplyAction="http://tempuri.org/IMoneyService/DeleteAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/DeleteAccountFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task DeleteAccountAsync(int accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/GetAllAccounts", ReplyAction="http://tempuri.org/IMoneyService/GetAllAccountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/GetAllAccountsFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.AccountDTO[]> GetAllAccountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/GetAccountBalance", ReplyAction="http://tempuri.org/IMoneyService/GetAccountBalanceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/GetAccountBalanceFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<decimal> GetAccountBalanceAsync(int accountId, System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/CreateCategory", ReplyAction="http://tempuri.org/IMoneyService/CreateCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/CreateCategoryFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<int> CreateCategoryAsync(string name, Fab.Metro.MoneyServiceReference.CategoryType categoryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/GetCategory", ReplyAction="http://tempuri.org/IMoneyService/GetCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/GetCategoryFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.CategoryDTO> GetCategoryAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/UpdateCategory", ReplyAction="http://tempuri.org/IMoneyService/UpdateCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/UpdateCategoryFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task UpdateCategoryAsync(int categoryId, string name, Fab.Metro.MoneyServiceReference.CategoryType categoryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/DeleteCategory", ReplyAction="http://tempuri.org/IMoneyService/DeleteCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/DeleteCategoryFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task DeleteCategoryAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/GetAllCategories", ReplyAction="http://tempuri.org/IMoneyService/GetAllCategoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/GetAllCategoriesFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.CategoryDTO[]> GetAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/DeleteJournal", ReplyAction="http://tempuri.org/IMoneyService/DeleteJournalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/DeleteJournalFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task DeleteJournalAsync(int accountId, int journalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/GetJournal", ReplyAction="http://tempuri.org/IMoneyService/GetJournalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/GetJournalFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.JournalDTO> GetJournalAsync(int accountId, int journalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/GetJournalsCount", ReplyAction="http://tempuri.org/IMoneyService/GetJournalsCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/GetJournalsCountFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.CategoryType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.QueryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.CategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.TextSearchFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.TransactionDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.JournalDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.TransferDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.DepositDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.WithdrawalDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.IncomingTransferDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.OutgoingTransferDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.AccountDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.AccountDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.CategoryDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.CategoryDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.JournalDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.AssetTypeDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.AssetTypeDTO))]
        System.Threading.Tasks.Task<int> GetJournalsCountAsync(int accountId, object queryFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/GetJournals", ReplyAction="http://tempuri.org/IMoneyService/GetJournalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/GetJournalsFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.CategoryType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.QueryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.CategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.TextSearchFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.TransactionDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.JournalDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.TransferDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.DepositDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.WithdrawalDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.IncomingTransferDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.OutgoingTransferDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.AccountDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.AccountDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.CategoryDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.CategoryDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.JournalDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.AssetTypeDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Fab.Metro.MoneyServiceReference.AssetTypeDTO))]
        System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.JournalDTO[]> GetJournalsAsync(int accountId, object queryFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/GetAllAssetTypes", ReplyAction="http://tempuri.org/IMoneyService/GetAllAssetTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/GetAllAssetTypesFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.AssetTypeDTO[]> GetAllAssetTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/Deposit", ReplyAction="http://tempuri.org/IMoneyService/DepositResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/DepositFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<int> DepositAsync(int accountId, System.DateTime date, decimal rate, decimal quantity, System.Nullable<int> categoryId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/Withdrawal", ReplyAction="http://tempuri.org/IMoneyService/WithdrawalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/WithdrawalFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<int> WithdrawalAsync(int accountId, System.DateTime date, decimal rate, decimal quantity, System.Nullable<int> categoryId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/UpdateTransaction", ReplyAction="http://tempuri.org/IMoneyService/UpdateTransactionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/UpdateTransactionFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task UpdateTransactionAsync(int accountId, int transactionId, bool isDeposit, System.DateTime date, decimal rate, decimal quantity, System.Nullable<int> categoryId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/Transfer", ReplyAction="http://tempuri.org/IMoneyService/TransferResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/TransferFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task<int> TransferAsync(int fromAccountId, int toAccountId, System.DateTime date, decimal rate, decimal quantity, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyService/UpdateTransfer", ReplyAction="http://tempuri.org/IMoneyService/UpdateTransferResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Fab.Metro.MoneyServiceReference.FaultDetail), Action="http://tempuri.org/IMoneyService/UpdateTransferFaultDetailFault", Name="FaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Fab.Server.Core.DTO")]
        System.Threading.Tasks.Task UpdateTransferAsync(int transactionId, int fromAccountId, int toAccountId, System.DateTime date, decimal rate, decimal quantity, string comment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMoneyServiceChannel : Fab.Metro.MoneyServiceReference.IMoneyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoneyServiceClient : System.ServiceModel.ClientBase<Fab.Metro.MoneyServiceReference.IMoneyService>, Fab.Metro.MoneyServiceReference.IMoneyService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MoneyServiceClient() : 
                base(MoneyServiceClient.GetDefaultBinding(), MoneyServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.MoneyServiceBasic.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MoneyServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(MoneyServiceClient.GetBindingForEndpoint(endpointConfiguration), MoneyServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MoneyServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MoneyServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MoneyServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MoneyServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MoneyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<int> CreateAccountAsync(string name, int assetTypeId) {
            return base.Channel.CreateAccountAsync(name, assetTypeId);
        }
        
        public System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.AccountDTO> GetAccountAsync(int accountId) {
            return base.Channel.GetAccountAsync(accountId);
        }
        
        public System.Threading.Tasks.Task UpdateAccountAsync(int accountId, string name) {
            return base.Channel.UpdateAccountAsync(accountId, name);
        }
        
        public System.Threading.Tasks.Task DeleteAccountAsync(int accountId) {
            return base.Channel.DeleteAccountAsync(accountId);
        }
        
        public System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.AccountDTO[]> GetAllAccountsAsync() {
            return base.Channel.GetAllAccountsAsync();
        }
        
        public System.Threading.Tasks.Task<decimal> GetAccountBalanceAsync(int accountId, System.DateTime dateTime) {
            return base.Channel.GetAccountBalanceAsync(accountId, dateTime);
        }
        
        public System.Threading.Tasks.Task<int> CreateCategoryAsync(string name, Fab.Metro.MoneyServiceReference.CategoryType categoryType) {
            return base.Channel.CreateCategoryAsync(name, categoryType);
        }
        
        public System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.CategoryDTO> GetCategoryAsync(int categoryId) {
            return base.Channel.GetCategoryAsync(categoryId);
        }
        
        public System.Threading.Tasks.Task UpdateCategoryAsync(int categoryId, string name, Fab.Metro.MoneyServiceReference.CategoryType categoryType) {
            return base.Channel.UpdateCategoryAsync(categoryId, name, categoryType);
        }
        
        public System.Threading.Tasks.Task DeleteCategoryAsync(int categoryId) {
            return base.Channel.DeleteCategoryAsync(categoryId);
        }
        
        public System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.CategoryDTO[]> GetAllCategoriesAsync() {
            return base.Channel.GetAllCategoriesAsync();
        }
        
        public System.Threading.Tasks.Task DeleteJournalAsync(int accountId, int journalId) {
            return base.Channel.DeleteJournalAsync(accountId, journalId);
        }
        
        public System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.JournalDTO> GetJournalAsync(int accountId, int journalId) {
            return base.Channel.GetJournalAsync(accountId, journalId);
        }
        
        public System.Threading.Tasks.Task<int> GetJournalsCountAsync(int accountId, object queryFilter) {
            return base.Channel.GetJournalsCountAsync(accountId, queryFilter);
        }
        
        public System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.JournalDTO[]> GetJournalsAsync(int accountId, object queryFilter) {
            return base.Channel.GetJournalsAsync(accountId, queryFilter);
        }
        
        public System.Threading.Tasks.Task<Fab.Metro.MoneyServiceReference.AssetTypeDTO[]> GetAllAssetTypesAsync() {
            return base.Channel.GetAllAssetTypesAsync();
        }
        
        public System.Threading.Tasks.Task<int> DepositAsync(int accountId, System.DateTime date, decimal rate, decimal quantity, System.Nullable<int> categoryId, string comment) {
            return base.Channel.DepositAsync(accountId, date, rate, quantity, categoryId, comment);
        }
        
        public System.Threading.Tasks.Task<int> WithdrawalAsync(int accountId, System.DateTime date, decimal rate, decimal quantity, System.Nullable<int> categoryId, string comment) {
            return base.Channel.WithdrawalAsync(accountId, date, rate, quantity, categoryId, comment);
        }
        
        public System.Threading.Tasks.Task UpdateTransactionAsync(int accountId, int transactionId, bool isDeposit, System.DateTime date, decimal rate, decimal quantity, System.Nullable<int> categoryId, string comment) {
            return base.Channel.UpdateTransactionAsync(accountId, transactionId, isDeposit, date, rate, quantity, categoryId, comment);
        }
        
        public System.Threading.Tasks.Task<int> TransferAsync(int fromAccountId, int toAccountId, System.DateTime date, decimal rate, decimal quantity, string comment) {
            return base.Channel.TransferAsync(fromAccountId, toAccountId, date, rate, quantity, comment);
        }
        
        public System.Threading.Tasks.Task UpdateTransferAsync(int transactionId, int fromAccountId, int toAccountId, System.DateTime date, decimal rate, decimal quantity, string comment) {
            return base.Channel.UpdateTransferAsync(transactionId, fromAccountId, toAccountId, date, rate, quantity, comment);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.MoneyServiceBasic)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.MoneyServiceBasic)) {
                return new System.ServiceModel.EndpointAddress("https://localhost/StagingFab/MoneyService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return MoneyServiceClient.GetBindingForEndpoint(EndpointConfiguration.MoneyServiceBasic);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return MoneyServiceClient.GetEndpointAddress(EndpointConfiguration.MoneyServiceBasic);
        }
        
        public enum EndpointConfiguration {
            
            MoneyServiceBasic,
        }
    }
}
