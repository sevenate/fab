//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProfitAndExpenseModel", "FK_TblRevenueList_TblCurrencyList1", "TblCurrencyList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fab.Server.Import.CurrencyList), "TblRevenueList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fab.Server.Import.RevenueList), true)]
[assembly: EdmRelationshipAttribute("ProfitAndExpenseModel", "FK_TblExpensesList_TblExpenseGroups", "TblExpenseGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fab.Server.Import.ExpenseGroup), "TblExpenseList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fab.Server.Import.ExpenseList), true)]
[assembly: EdmRelationshipAttribute("ProfitAndExpenseModel", "FK_TblRevenueList_TblRevenueGroups", "TblRevenueGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Fab.Server.Import.RevenueGroup), "TblRevenueList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Fab.Server.Import.RevenueList), true)]

#endregion

namespace Fab.Server.Import
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProfitAndExpenseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProfitAndExpenseEntities object using the connection string found in the 'ProfitAndExpenseEntities' section of the application configuration file.
        /// </summary>
        public ProfitAndExpenseEntities() : base("name=ProfitAndExpenseEntities", "ProfitAndExpenseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProfitAndExpenseEntities object.
        /// </summary>
        public ProfitAndExpenseEntities(string connectionString) : base(connectionString, "ProfitAndExpenseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProfitAndExpenseEntities object.
        /// </summary>
        public ProfitAndExpenseEntities(EntityConnection connection) : base(connection, "ProfitAndExpenseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CurrencyList> TblCurrencyLists
        {
            get
            {
                if ((_TblCurrencyLists == null))
                {
                    _TblCurrencyLists = base.CreateObjectSet<CurrencyList>("TblCurrencyLists");
                }
                return _TblCurrencyLists;
            }
        }
        private ObjectSet<CurrencyList> _TblCurrencyLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseGroup> TblExpenseGroups
        {
            get
            {
                if ((_TblExpenseGroups == null))
                {
                    _TblExpenseGroups = base.CreateObjectSet<ExpenseGroup>("TblExpenseGroups");
                }
                return _TblExpenseGroups;
            }
        }
        private ObjectSet<ExpenseGroup> _TblExpenseGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseList> TblExpenseLists
        {
            get
            {
                if ((_TblExpenseLists == null))
                {
                    _TblExpenseLists = base.CreateObjectSet<ExpenseList>("TblExpenseLists");
                }
                return _TblExpenseLists;
            }
        }
        private ObjectSet<ExpenseList> _TblExpenseLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RevenueGroup> TblRevenueGroups
        {
            get
            {
                if ((_TblRevenueGroups == null))
                {
                    _TblRevenueGroups = base.CreateObjectSet<RevenueGroup>("TblRevenueGroups");
                }
                return _TblRevenueGroups;
            }
        }
        private ObjectSet<RevenueGroup> _TblRevenueGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RevenueList> TblRevenueLists
        {
            get
            {
                if ((_TblRevenueLists == null))
                {
                    _TblRevenueLists = base.CreateObjectSet<RevenueList>("TblRevenueLists");
                }
                return _TblRevenueLists;
            }
        }
        private ObjectSet<RevenueList> _TblRevenueLists;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TblCurrencyLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTblCurrencyLists(CurrencyList currencyList)
        {
            base.AddObject("TblCurrencyLists", currencyList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TblExpenseGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTblExpenseGroups(ExpenseGroup expenseGroup)
        {
            base.AddObject("TblExpenseGroups", expenseGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TblExpenseLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTblExpenseLists(ExpenseList expenseList)
        {
            base.AddObject("TblExpenseLists", expenseList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TblRevenueGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTblRevenueGroups(RevenueGroup revenueGroup)
        {
            base.AddObject("TblRevenueGroups", revenueGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TblRevenueLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTblRevenueLists(RevenueList revenueList)
        {
            base.AddObject("TblRevenueLists", revenueList);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProfitAndExpenseModel", Name="CurrencyList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CurrencyList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrencyList object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CurrencyList CreateCurrencyList(global::System.Int32 id, global::System.String name)
        {
            CurrencyList currencyList = new CurrencyList();
            currencyList.Id = id;
            currencyList.Name = name;
            return currencyList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProfitAndExpenseModel", "FK_TblRevenueList_TblCurrencyList1", "TblRevenueList")]
        public EntityCollection<RevenueList> TblRevenueLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RevenueList>("ProfitAndExpenseModel.FK_TblRevenueList_TblCurrencyList1", "TblRevenueList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RevenueList>("ProfitAndExpenseModel.FK_TblRevenueList_TblCurrencyList1", "TblRevenueList", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProfitAndExpenseModel", Name="ExpenseGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static ExpenseGroup CreateExpenseGroup(global::System.Int32 id, global::System.String name, global::System.DateTime creationDate, global::System.Boolean isDeleted)
        {
            ExpenseGroup expenseGroup = new ExpenseGroup();
            expenseGroup.Id = id;
            expenseGroup.Name = name;
            expenseGroup.CreationDate = creationDate;
            expenseGroup.IsDeleted = isDeleted;
            return expenseGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProfitAndExpenseModel", "FK_TblExpensesList_TblExpenseGroups", "TblExpenseList")]
        public EntityCollection<ExpenseList> TblExpenseLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseList>("ProfitAndExpenseModel.FK_TblExpensesList_TblExpenseGroups", "TblExpenseList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseList>("ProfitAndExpenseModel.FK_TblExpensesList_TblExpenseGroups", "TblExpenseList", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProfitAndExpenseModel", Name="ExpenseList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseList object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="expenseGroupId">Initial value of the ExpenseGroupId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static ExpenseList CreateExpenseList(global::System.Int32 id, global::System.Int32 expenseGroupId, global::System.String name, global::System.Decimal cost, global::System.DateTime creationDate, global::System.Boolean isDeleted)
        {
            ExpenseList expenseList = new ExpenseList();
            expenseList.Id = id;
            expenseList.ExpenseGroupId = expenseGroupId;
            expenseList.Name = name;
            expenseList.Cost = cost;
            expenseList.CreationDate = creationDate;
            expenseList.IsDeleted = isDeleted;
            return expenseList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseGroupId
        {
            get
            {
                return _ExpenseGroupId;
            }
            set
            {
                OnExpenseGroupIdChanging(value);
                ReportPropertyChanging("ExpenseGroupId");
                _ExpenseGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseGroupId");
                OnExpenseGroupIdChanged();
            }
        }
        private global::System.Int32 _ExpenseGroupId;
        partial void OnExpenseGroupIdChanging(global::System.Int32 value);
        partial void OnExpenseGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProfitAndExpenseModel", "FK_TblExpensesList_TblExpenseGroups", "TblExpenseGroups")]
        public ExpenseGroup TblExpenseGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseGroup>("ProfitAndExpenseModel.FK_TblExpensesList_TblExpenseGroups", "TblExpenseGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseGroup>("ProfitAndExpenseModel.FK_TblExpensesList_TblExpenseGroups", "TblExpenseGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseGroup> TblExpenseGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseGroup>("ProfitAndExpenseModel.FK_TblExpensesList_TblExpenseGroups", "TblExpenseGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseGroup>("ProfitAndExpenseModel.FK_TblExpensesList_TblExpenseGroups", "TblExpenseGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProfitAndExpenseModel", Name="RevenueGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RevenueGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RevenueGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static RevenueGroup CreateRevenueGroup(global::System.Int32 id, global::System.String name, global::System.DateTime creationDate, global::System.Boolean isDeleted)
        {
            RevenueGroup revenueGroup = new RevenueGroup();
            revenueGroup.Id = id;
            revenueGroup.Name = name;
            revenueGroup.CreationDate = creationDate;
            revenueGroup.IsDeleted = isDeleted;
            return revenueGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProfitAndExpenseModel", "FK_TblRevenueList_TblRevenueGroups", "TblRevenueList")]
        public EntityCollection<RevenueList> TblRevenueLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RevenueList>("ProfitAndExpenseModel.FK_TblRevenueList_TblRevenueGroups", "TblRevenueList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RevenueList>("ProfitAndExpenseModel.FK_TblRevenueList_TblRevenueGroups", "TblRevenueList", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProfitAndExpenseModel", Name="RevenueList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RevenueList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RevenueList object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="revenueGroupId">Initial value of the RevenueGroupId property.</param>
        /// <param name="sourceName">Initial value of the SourceName property.</param>
        /// <param name="amountGRN">Initial value of the AmountGRN property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="memo">Initial value of the Memo property.</param>
        /// <param name="exchangeRate">Initial value of the ExchangeRate property.</param>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static RevenueList CreateRevenueList(global::System.Int32 id, global::System.Int32 revenueGroupId, global::System.String sourceName, global::System.Decimal amountGRN, global::System.DateTime creationDate, global::System.String memo, global::System.Double exchangeRate, global::System.Int32 currencyId, global::System.Boolean isDeleted)
        {
            RevenueList revenueList = new RevenueList();
            revenueList.Id = id;
            revenueList.RevenueGroupId = revenueGroupId;
            revenueList.SourceName = sourceName;
            revenueList.AmountGRN = amountGRN;
            revenueList.CreationDate = creationDate;
            revenueList.Memo = memo;
            revenueList.ExchangeRate = exchangeRate;
            revenueList.CurrencyId = currencyId;
            revenueList.IsDeleted = isDeleted;
            return revenueList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RevenueGroupId
        {
            get
            {
                return _RevenueGroupId;
            }
            set
            {
                OnRevenueGroupIdChanging(value);
                ReportPropertyChanging("RevenueGroupId");
                _RevenueGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RevenueGroupId");
                OnRevenueGroupIdChanged();
            }
        }
        private global::System.Int32 _RevenueGroupId;
        partial void OnRevenueGroupIdChanging(global::System.Int32 value);
        partial void OnRevenueGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceName
        {
            get
            {
                return _SourceName;
            }
            set
            {
                OnSourceNameChanging(value);
                ReportPropertyChanging("SourceName");
                _SourceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SourceName");
                OnSourceNameChanged();
            }
        }
        private global::System.String _SourceName;
        partial void OnSourceNameChanging(global::System.String value);
        partial void OnSourceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AmountGRN
        {
            get
            {
                return _AmountGRN;
            }
            set
            {
                OnAmountGRNChanging(value);
                ReportPropertyChanging("AmountGRN");
                _AmountGRN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountGRN");
                OnAmountGRNChanged();
            }
        }
        private global::System.Decimal _AmountGRN;
        partial void OnAmountGRNChanging(global::System.Decimal value);
        partial void OnAmountGRNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ExchangeRate
        {
            get
            {
                return _ExchangeRate;
            }
            set
            {
                OnExchangeRateChanging(value);
                ReportPropertyChanging("ExchangeRate");
                _ExchangeRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeRate");
                OnExchangeRateChanged();
            }
        }
        private global::System.Double _ExchangeRate;
        partial void OnExchangeRateChanging(global::System.Double value);
        partial void OnExchangeRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private global::System.Int32 _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.Int32 value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProfitAndExpenseModel", "FK_TblRevenueList_TblCurrencyList1", "TblCurrencyList")]
        public CurrencyList TblCurrencyList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyList>("ProfitAndExpenseModel.FK_TblRevenueList_TblCurrencyList1", "TblCurrencyList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyList>("ProfitAndExpenseModel.FK_TblRevenueList_TblCurrencyList1", "TblCurrencyList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CurrencyList> TblCurrencyListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CurrencyList>("ProfitAndExpenseModel.FK_TblRevenueList_TblCurrencyList1", "TblCurrencyList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CurrencyList>("ProfitAndExpenseModel.FK_TblRevenueList_TblCurrencyList1", "TblCurrencyList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProfitAndExpenseModel", "FK_TblRevenueList_TblRevenueGroups", "TblRevenueGroups")]
        public RevenueGroup TblRevenueGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RevenueGroup>("ProfitAndExpenseModel.FK_TblRevenueList_TblRevenueGroups", "TblRevenueGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RevenueGroup>("ProfitAndExpenseModel.FK_TblRevenueList_TblRevenueGroups", "TblRevenueGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RevenueGroup> TblRevenueGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RevenueGroup>("ProfitAndExpenseModel.FK_TblRevenueList_TblRevenueGroups", "TblRevenueGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RevenueGroup>("ProfitAndExpenseModel.FK_TblRevenueList_TblRevenueGroups", "TblRevenueGroups", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
